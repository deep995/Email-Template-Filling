# -*- coding: utf-8 -*-
"""IDS2022011_NLP_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NXCbGi9y47aq8Q8I9LJjsHXSJuRHYiQF
"""

from google.colab import drive
drive.mount('/content/drive')

import csv
import spacy
import pandas as pd

# Load the spaCy model
nlp = spacy.load("en_core_web_sm")

# Define the template filling functions

def fill_buy_template(doc):
    # Template filling logic for BUY template
    buyer = ""
    item = ""
    price = ""
    quantity = ""
    source = ""

    for token in doc:
        if token.ent_type_ == "PERSON" or token.ent_type_ == "ORG":
            if buyer == "":
                buyer = token.text
        elif token.ent_type_ == "PRODUCT" or token.ent_type_ == "ORG":
            if item == "":
                item = token.text
        elif token.text.startswith("$"):
            if price == "":
                price = token.text[1:] # Remove the dollar sign
            break

    filled_template = f"BUY({buyer}, {item}, {price}, {quantity}, {source})"
    return filled_template

def fill_work_template(doc):
    # Template filling logic for WORK template
    person = ""
    organization = ""
    position = ""
    location = ""

    for token in doc:
        if token.ent_type_ == "PERSON":
            if person == "":
                person = token.text
            break

    filled_template = f"WORK({person}, {organization}, {position}, {location})"
    return filled_template

def fill_part_template(doc):
    # Template filling logic for PART template
    location_1 = ""
    location_2 = ""

    for token in doc:
        if token.ent_type_ == "LOC" or token.ent_type_ == "GPE" or token.ent_type_ == "NORP" or token.ent_type_ == "FAC":
            if location_1 == "":
                location_1 = token.text
            elif location_2 == "":
                location_2 = token.text

    filled_template = f"PART({location_1}, {location_2})"
    return filled_template
# Define the template names and their respective filling functions
templates = {
    "BUY": fill_buy_template,
    "WORK": fill_work_template,
    "PART": fill_part_template
}

# Define the input CSV file path
csv_file = "/content/drive/MyDrive/Colab Notebooks/labeled_emails.csv"


# Open the CSV file and read the email texts
with open(csv_file, "r", newline="") as file:
    reader = csv.DictReader(file)
    for row in reader:
        email_text = row["email"]

        # Process the email text using spaCy
        doc = nlp(email_text)
        
        # Iterate over the detected entities in the document
        for ent in doc.ents:
          # If the entity label matches a template, fill the template
          if ent.label_ == 'PRODUCT':
            filled_template = templates['BUY'](doc)
            print(f"Template: {template_name}")
            print(f"Filled Template: {filled_template}")
          if ent.label_ == 'ORG':
            filled_template = templates['WORK'](doc)
            print(f"Template: {template_name}")
            print(f"Filled Template: {filled_template}")
          if ent.label_ in ["LOC","GPE","NORP","FAC"]:
            filled_template = templates['PART'](doc)
            print(f"Template: {template_name}")
            print(f"Filled Template: {filled_template}")
          print()

#                 print(f"Template: {template_name}")
#                 print(f"Filled Template: {filled_template}")
#                 print()
